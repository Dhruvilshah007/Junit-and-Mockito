
Test Driven Development(TDD)
Traditional Development
->  Design->Code->Test

Test Driven Development
->  Test(First,Write a failing test)->Code(Write code to make test pass)->Refactor(Refactor and imporve on design)-> Repeat process for next test


Benefits of TDD
->Clear task list of things to test and develop
->Test will help you identify edge cases
->Develop code in small increments
->Passing tests increases confidence in code
->Gives freedom to refactor,tests are safey net.

Development Process
1)Write a failing test
2)Write code to make test pass
3)Refactor the code
4)Repeat the process


Imp
Junit provides @ParameterizedTest
Run a test multiple times and provide different paramater values(Behind the scenes,Junit will run test multiple times and supply data,Junit does looping for you)

@ValueSource    ->  Arrays of values: Strings,int,doubles,floats etcc
@CsvSource  ->  Array of CSV String values
@CsvFileSource ->  CSV values read from a file
@EnumSource ->  Enum constant values
@MethodSource   ->  Custom method for providing values


@MethodSource,Argument Aggregation etc.. go and check doc